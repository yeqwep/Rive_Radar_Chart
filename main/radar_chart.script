-- rgba function by benjames-171
-- https://github.com/benjames-171/defold-games
local function hex2rgba(hex)
	hex = hex:gsub("#", "")
	local rgba =
		vmath.vector4(
		tonumber("0x" .. hex:sub(1, 2)) / 255,
		tonumber("0x" .. hex:sub(3, 4)) / 255,
		tonumber("0x" .. hex:sub(5, 6)) / 255,
		1
	)
	return rgba
end

function init(self)
	msg.post("@render:", "clear_color", {color = hex2rgba("#dedede")})
	rive.play_state_machine("/go#radar_chart", "S1")

	for i=1,6 do
		local p = "P_" .. i
		local param = 0
	go.set("/go#radar_chart", p, param)
	end
	msg.post(".", "acquire_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		for i=1,6 do
			local p = "P_" .. i
			local param = math.random(0,500)
		-- go.set("/go#radar_chart", p, param)
		print("update_radar P_",i,", param : ",param)

		go.animate("/go#radar_chart",p,go.PLAYBACK_ONCE_FORWARD,param,go.EASING_INBACK,3)
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
